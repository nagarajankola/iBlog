{"version":3,"sources":["images/postImages/diy.png","images/postImages/education.png","images/postImages/fashion.png","images/postImages/finance.png","images/postImages/fitness.png","images/postImages/food.png","images/postImages/pet.png","images/postImages/politics.png","images/postImages/tech.png","images/postImages/travel.png","images/postImages/defaultImage.png","images/avatar/boyAvatar.png","images/avatar/girlAvatar.png","images/avatar/maleAvatar1.png","images/avatar/maleAvatar2.png","images/avatar/femaleAvatar1.png","images/avatar/femaleAvatar2.png","images/bannerImages/diy.png","images/bannerImages/education.png","images/bannerImages/fashion.png","images/bannerImages/finance.png","images/bannerImages/fitness.png","images/bannerImages/food.png","images/bannerImages/pet.png","images/bannerImages/politics.png","images/bannerImages/tech.png","images/bannerImages/travel.png","images/bannerImages/defaultImage.png","images/home.svg","utils/postImages.js","utils/avatarImages.js","images/loadingg.svg","components/ArticleList.jsx","components/PostArticle.jsx","components/Banner.jsx","images/logo.png","store/login.js","components/Header.jsx","components/LoginSign.jsx","images/empty.webp","components/MyArticles.jsx","images/avatar/defaultAvatar.png","components/MyProfileCard.jsx","components/PeopleAlsoRead.jsx","utils/bannerImages.js","components/BlogPost.jsx","App.js","store/configureStore.js","index.js"],"names":["imagesPost","diy","require","default","education","fashion","finance","fitness","food","pet","politics","tech","travel","defaultImage","avatarImages","avatarBoy","avatarGirl","maleAvatar1","maleAvatar2","femaleAvatar1","femaleAvatar2","ArticleList","useState","articleList","setArticleList","useEffect","a","fetch","method","then","response","json","data","allArticles","length","className","style","alignContent","src","loading","map","article","to","pathname","state","articleImage","articleTitle","articleBody","readTime","userName","uploadedBy","profilePicture","textDecoration","color","images","alt","borderRadius","width","uploadedTime","substring","useStyles","makeStyles","theme","appBar","position","backgroundColor","title","marginLeft","spacing","flex","Transition","React","forwardRef","props","ref","Slide","direction","FullScreenDialog","name","value","changeSnackState","changeSnackStateArticlePosted","openSnackFields","setOpenSnackFields","location","useLocation","handleCloseSnackFields","event","reason","currentUser","useContext","ReactReduxContext","store","getState","history","useHistory","articleData","setArticleData","handleInputs","e","target","PostArticle","preventDefault","profile","id","Math","round","replace","split","headers","body","JSON","stringify","res","status","console","log","handleClose","push","error","classes","open","setOpen","Button","variant","onClick","isLoggedIn","Dialog","fullScreen","onClose","TransitionComponent","AppBar","marginBottom","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","action","Fragment","IconButton","size","aria-label","fontSize","Toolbar","edge","Typography","autoFocus","type","placeholder","autoComplete","required","onChange","defaultValue","rows","Banner","openSnackLogin","setOpenSnackLogin","openSnackArticlePosted","setOpenSnackArticlePosted","handleCloseSnackLogin","handleCloseSnackArticlePosted","paddingTop","snackState","snackStateArticlePosted","bannerImage","slice","createSlice","initialState","email","reducers","payload","actions","userLogged","userLoggedOut","reducer","Header","openSnack","setOpenSnack","openSnackLogout","setOpenSnackLogout","handleCloseSnack","loginStore","loggedUserData","loginStatus","useLayoutEffect","window","scrollTo","logoImg","activeClassName","dispatch","LoginSign","openSnackRegister","setOpenSnackRegister","handleCloseSnackRegister","lname","lvalue","loginEmail","loginPassword","loginUser","setLoginUser","handleLoginInputs","loginData","password","loginResData","userLogin","_id","alert","confirmPassword","user","setUser","PostData","userRegister","href","MyArticles","openSnackDeleteArticle","setOpenSnackDeleteArticle","deletedArticleId","setDeletedArticleId","handleCloseSnackDeleteArticle","fetchArticles","deleteArticle","onlyMyArticleList","index","empty","class","MyProfileCard","defaultProfilePicture","PeopleAlsoRead","randomArticles","rand","floor","random","randomNumbers","imagesBanner","BlogPost","display","App","exact","path","persistConfig","key","version","storage","persistedReducer","persistReducer","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b83612c8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/diy.a01b5f83.png\";","export default __webpack_public_path__ + \"static/media/education.12563338.png\";","export default __webpack_public_path__ + \"static/media/fashion.202cacd5.png\";","export default __webpack_public_path__ + \"static/media/finance.42a8c240.png\";","export default __webpack_public_path__ + \"static/media/fitness.b47204fd.png\";","export default __webpack_public_path__ + \"static/media/food.abda35eb.png\";","export default __webpack_public_path__ + \"static/media/pet.1e9d133e.png\";","export default __webpack_public_path__ + \"static/media/politics.c2ed689b.png\";","export default __webpack_public_path__ + \"static/media/tech.37439c28.png\";","export default __webpack_public_path__ + \"static/media/travel.3677e833.png\";","export default __webpack_public_path__ + \"static/media/defaultImage.e8b6f424.png\";","export default __webpack_public_path__ + \"static/media/boyAvatar.7eb33c53.png\";","export default __webpack_public_path__ + \"static/media/girlAvatar.731079e9.png\";","export default __webpack_public_path__ + \"static/media/maleAvatar1.89ce8c99.png\";","export default __webpack_public_path__ + \"static/media/maleAvatar2.18450dd5.png\";","export default __webpack_public_path__ + \"static/media/femaleAvatar1.4ef354f3.png\";","export default __webpack_public_path__ + \"static/media/femaleAvatar2.6d387e00.png\";","export default __webpack_public_path__ + \"static/media/diy.5dc94300.png\";","export default __webpack_public_path__ + \"static/media/education.b9aae3c3.png\";","export default __webpack_public_path__ + \"static/media/fashion.4316eb4d.png\";","export default __webpack_public_path__ + \"static/media/finance.508fc5c3.png\";","export default __webpack_public_path__ + \"static/media/fitness.273d4d8b.png\";","export default __webpack_public_path__ + \"static/media/food.621168a7.png\";","export default __webpack_public_path__ + \"static/media/pet.4deffd6f.png\";","export default __webpack_public_path__ + \"static/media/politics.a950a84a.png\";","export default __webpack_public_path__ + \"static/media/tech.39843ab6.png\";","export default __webpack_public_path__ + \"static/media/travel.0bf4479c.png\";","export default __webpack_public_path__ + \"static/media/defaultImage.71b090f4.png\";","export default __webpack_public_path__ + \"static/media/home.f6afe7c2.svg\";","const imagesPost = {\n    diy: require(\"../images/postImages/diy.png\").default,\n    education: require(\"../images/postImages/education.png\").default,\n    fashion: require(\"../images/postImages/fashion.png\").default,\n    finance: require(\"../images/postImages/finance.png\").default,\n    fitness: require(\"../images/postImages/fitness.png\").default,\n    food: require(\"../images/postImages/food.png\").default,\n    pet: require(\"../images/postImages/pet.png\").default,\n    politics: require(\"../images/postImages/politics.png\").default,\n    tech: require(\"../images/postImages/tech.png\").default,\n    travel: require(\"../images/postImages/travel.png\").default,\n    defaultImage: require(\"../images/postImages/defaultImage.png\").default,\n  };\n\n  export default imagesPost;","const avatarImages = {\n    avatarBoy: require(\"../images/avatar/boyAvatar.png\").default,\n    avatarGirl: require(\"../images/avatar/girlAvatar.png\").default,\n    maleAvatar1: require(\"../images/avatar/maleAvatar1.png\").default,\n    maleAvatar2: require(\"../images/avatar/maleAvatar2.png\").default,\n    femaleAvatar1: require(\"../images/avatar/femaleAvatar1.png\").default,\n    femaleAvatar2: require(\"../images/avatar/femaleAvatar2.png\").default,\n   \n  };\n  \n  export default avatarImages;","export default __webpack_public_path__ + \"static/media/loadingg.c18999f3.svg\";","import React from \"react\";\nimport \"../styles/utils.css\";\nimport \"../styles/style.css\";\nimport \"../styles/mobile.css\";\nimport { Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport images from \"../utils/postImages\";\nimport avatarImages from \"../utils/avatarImages\";\nimport loading from \"../images/loadingg.svg\";\n\n\nexport default function ArticleList() {\n  // list of all articles state \n  const [articleList, setArticleList] = useState([]);\n\n  useEffect(async () => {\n    // console.log(articleList);\n    const res = await fetch(\"/allarticles\", {\n      method: \"GET\",\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setArticleList(data.allArticles);\n      });\n    // console.log(articleList.length);\n  },[]);\n\n  return (\n    (articleList.length === 0)?\n    <div className=\"home-articles max-width-1 m-auto font2\" style={{alignContent:\"center\"}}>\n    <h2>Featured Articles</h2>\n    <div className=\"max-width-1 m-auto font2 nothingToShow\">\n        <img src={loading} ></img>\n      </div>\n    </div>\n    :\n    <div>\n      <div className=\"home-articles max-width-1 m-auto font2\">\n        <h2>Featured Articles</h2>\n\n        {articleList.map((article) => {\n          return (\n            <Link\n              to={{pathname : \"/blogpost\", state:{\n                articleImage :article.articleImage,\n                articleTitle :article.articleTitle,\n                articleBody : article.articleBody,\n                readTime :article.readTime,\n                userName :article.uploadedBy.userName,\n                profilePicture :article.uploadedBy.profilePicture,\n                allArticles: articleList,\n              }}} \n              style={{ textDecoration: \"none\", color: \"black\" }}\n              \n            >\n              <div className=\"home-article\">\n                <div className=\"home-article-img\">\n                  <img src={images[`${article.articleImage}`]} alt=\"article\" />\n                </div>\n                <div className=\"home-article-content font1\">\n                  <a>\n                    <h3>{article.articleTitle}</h3>\n                  </a>\n                  <div className=\"post-info\">\n                    <div className=\"profilepicture\">\n                      <img\n                        src={\n                          avatarImages[`${article.uploadedBy.profilePicture}`]\n                        }\n                        alt=\"Avatar\"\n                        style={{ borderRadius: \"50%\", width: \"50px\" }}\n                      />\n                    </div>\n                    <div>{article.uploadedBy.userName}</div>\n                  </div>\n                  <span>{article.uploadedTime.substring(0,10)} | {article.readTime} min read</span>\n                </div>\n              </div>\n            </Link>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { ReactReduxContext } from \"react-redux\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport \"../styles/postArticleIPfields.css\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport \"../styles/dropDown.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n    color: \"black\",\n    backgroundColor: \"#FFF8F2\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog({\n  changeSnackState,\n  changeSnackStateArticlePosted,\n}) {\n  const [openSnackFields, setOpenSnackFields] = React.useState(false);\n  const location = useLocation();\n\n  const handleCloseSnackFields = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnackFields(false);\n  };\n\n  const loggedUserData = useContext(ReactReduxContext);\n  const currentUser = loggedUserData.store.getState();\n  // console.log(currentUser);\n  const history = useHistory();\n\n  //for article\n  const [articleData, setArticleData] = useState({\n    articleTitle: \"\",\n    articleBody: \"\",\n    articleImage: \"\",\n  });\n\n  let name, value;\n  const handleInputs = (e) => {\n    name = e.target.name;\n    value = e.target.value;\n\n    setArticleData({ ...articleData, [name]: value });\n  };\n\n  function countWords(str) {\n    str = str.replace(/(^\\s*)|(\\s*$)/gi, \"\");\n    str = str.replace(/[ ]{2,}/gi, \" \");\n    str = str.replace(/\\n /, \"\\n\");\n    return str.split(\" \").length;\n  }\n\n  //  const minReadMin = (totalCount/238);\n\n  const PostArticle = async (e) => {\n    e.preventDefault();\n    const { articleTitle, articleBody, articleImage } = articleData;\n\n    const uploadedBy = currentUser.profile.id;\n    const readTime = Math.round((countWords(articleBody) / 190 / 10) * 10) + 1;\n    const res = await fetch(\"/postArticle\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        articleTitle,\n        articleBody,\n        articleImage,\n        uploadedBy,\n        readTime,\n      }),\n    });\n\n    const data = await res.json();\n\n    if (res.status === 422 || !data) {\n      setOpenSnackFields(true);\n      console.log(data.error);\n    } else {\n      // window.alert(\"article posted!\");\n      console.log(\"article posted!\");\n      // console.log(location.pathname);\n      // setOpenSnack(true);\n      handleClose();\n      changeSnackStateArticlePosted(true);\n      setArticleData({\n        articleTitle: \"\",\n        articleBody: \"\",\n        articleImage: \"\",\n      });\n      if(location.pathname === '/home'){\n        history.push('/myprofile')\n      }else{\n\n        history.push(\"/home\");\n      }\n    }\n  };\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    if (currentUser.isLoggedIn === false) {\n      // window.alert(\"pleaseLogin\")\n      changeSnackState(true);\n      // setOpenSnackLogin(true);\n      // history.push('/login');\n    } else {\n      setOpen(true);\n    }\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"#FFF8F2\" onClick={handleClickOpen}>\n        Post an article...\n      </Button>\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Transition}\n      >\n        <AppBar className={classes.appBar} style={{ marginBottom: \"20px\" }}>\n          {/* // fill all the fields snackbar */}\n          <Snackbar\n            anchorOrigin={{\n              vertical: \"top\",\n              horizontal: \"center\",\n            }}\n            // color=\"#FFF8F2\"\n            backgroundColor=\"#FFF8F2\"\n            open={openSnackFields}\n            autoHideDuration={2000}\n            onClose={handleCloseSnackFields}\n            message=\"Fields can't be empty\"\n            action={\n              <React.Fragment>\n                <IconButton\n                  size=\"small\"\n                  aria-label=\"close\"\n                  color=\"white\"\n                  onClick={handleCloseSnackFields}\n                >\n                  <CloseIcon fontSize=\"small\" />\n                </IconButton>\n              </React.Fragment>\n            }\n          />\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              onClick={handleClose}\n              aria-label=\"close\"\n            >\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              Post an article\n            </Typography>\n            <Button autoFocus color=\"inherit\" onClick={PostArticle}>\n              Post\n            </Button>\n          </Toolbar>\n        </AppBar>\n        {/* <TextField /> */}\n        <form>\n          <h3>Title</h3>\n          <input\n            type=\"text\"\n            placeholder=\"title\"\n            id=\"title\"\n            autoComplete=\"off\"\n            required=\"true\"\n            name=\"articleTitle\"\n            value={articleData.articleTitle}\n            onChange={handleInputs}\n          ></input>\n          <h3>Choose Your Topic</h3>\n          <div className=\"ip_container\">\n            <div className=\"ip_select-box\">\n              <select\n                name=\"articleImage\"\n                onChange={handleInputs}\n                value={articleData.articleImage}\n                defaultValue=\"default\"\n                placeholder=\"Select your niche\"\n              >\n                <option value=\"defaultImage\">choose</option>\n                <option value=\"fitness\">Health and Fitness</option>\n                <option value=\"finance\">Personal Finance</option>\n                <option value=\"fashion\">Fashion / Lifestyle</option>\n                <option value=\"tech\">Technology / Gaming</option>\n                <option value=\"travel\">Travel</option>\n                <option value=\"food\">Food</option>\n                <option value=\"diy\">DIY / Craft</option>\n                <option value=\"pet\">Pets / Animals</option>\n                <option value=\"politics\">Politics</option>\n                <option value=\"education\">Education</option>\n                <option value=\"defaultImage\">Other</option>\n              </select>\n            </div>\n          </div>\n          <h3>Content area</h3>\n          <textarea\n            rows=\"9\"\n            placeholder=\"start writing here...\"\n            id=\"content\"\n            autoComplete=\"off\"\n            required=\"true\"\n            name=\"articleBody\"\n            value={articleData.articleBody}\n            onChange={handleInputs}\n          ></textarea>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport bannerImage from \"../images/home.svg\";\nimport ArticleList from \"./ArticleList\";\nimport PostArticle from \"./PostArticle\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nfunction Banner() {\n  // snackbar for login and article posted\n  const [openSnackLogin, setOpenSnackLogin] = React.useState(false);\n  const [openSnackArticlePosted, setOpenSnackArticlePosted] =\n    React.useState(false);\n\n  const handleCloseSnackLogin = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnackLogin(false);\n  };\n\n  const handleCloseSnackArticlePosted = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnackArticlePosted(false);\n  };\n\n  return (\n    <div>\n      <div className=\"m-auto content max-width-1 my-2\">\n        {/* // please Login snackbar */}\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\",\n          }}\n          // color=\"#FFF8F2\"\n          backgroundColor=\"#FFF8F2\"\n          open={openSnackLogin}\n          autoHideDuration={2000}\n          onClose={handleCloseSnackLogin}\n          message=\"Please Login!\"\n          action={\n            <React.Fragment>\n              <IconButton\n                size=\"small\"\n                aria-label=\"close\"\n                color=\"white\"\n                onClick={handleCloseSnackLogin}\n              >\n                <CloseIcon fontSize=\"small\" />\n              </IconButton>\n            </React.Fragment>\n          }\n        />\n        <div className=\"content-left\">\n          <h1>The heaven for bloggers</h1>\n          <p>\n            iBlog is a website which lets you submit an article which upon\n            approval will be up on our website and you can get a good amount of\n            reach from here!\n          </p>\n          <p>\n            When blogs and blogging began, the original purpose was for\n            individuals to share their personal lives online, similar to an\n            online journal. Over the last decade, blogging has evolved from\n            having more personal to more professional goals. Instead of\n            individuals solely blogging for their friends and family, blogging\n            began to encompass professionals blogging for the public to promote\n            their personal brand and their business. In this post, we’re going\n            to look at the typical reasons why people choose to start blogging\n            and its benefits.\n          </p>\n          <div style={{ paddingTop: \"3vh\" }}>\n            <PostArticle\n              changeSnackState={(snackState) => setOpenSnackLogin(snackState)}\n              changeSnackStateArticlePosted={(snackStateArticlePosted) =>\n                setOpenSnackArticlePosted(snackStateArticlePosted)\n              }\n            />\n          </div>\n        </div>\n        <div className=\"content-right\">\n          <img src={bannerImage} alt=\"iBlog\" />\n        </div>\n      </div>\n      <div className=\"max-width-1 m-auto\">\n        <hr />\n      </div>\n      {/* // posted article snackbar */}\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        // color=\"#FFF8F2\"\n        backgroundColor=\"#FFF8F2\"\n        open={openSnackArticlePosted}\n        autoHideDuration={2000}\n        onClose={handleCloseSnackArticlePosted}\n        message=\"Article Posted\"\n        action={\n          <React.Fragment>\n            <IconButton\n              size=\"small\"\n              aria-label=\"close\"\n              color=\"white\"\n              onClick={handleCloseSnackArticlePosted}\n            >\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          </React.Fragment>\n        }\n      />\n      <ArticleList />\n    </div>\n  );\n}\n\nexport default Banner;\n","export default __webpack_public_path__ + \"static/media/logo.6b2f4d04.png\";","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  profile: {\n    id: '',\n    userName: '',\n    email: '',\n    profilePicture: '',\n  },\n  isLoggedIn: false\n}\n\nconst slice = createSlice({\n  name: \"login\",\n  initialState: initialState,\n  reducers: {\n    \"userLogged\": (state, action) => {\n      return {\n        ...state,\n        profile: {\n          id: action.payload.id,\n          userName: action.payload.userName,\n          email: action.payload.email,\n          profilePicture: action.payload.profilePicture,\n        },\n        isLoggedIn: true,\n      }\n    },\n    \"userLoggedOut\":(state,action)=>{\n      return {\n        ...state,\n        profile:{\n          id: '',\n          userName: '',\n          email: '',\n          profilePicture: '',\n        },\n        isLoggedIn:false\n      }\n    }\n  }\n})\n\n\nexport const { userLogged ,userLoggedOut} = slice.actions;\nexport const reducer = slice.reducer;\n","import React, { useLayoutEffect, useContext } from \"react\";\nimport \"../styles/utils.css\";\nimport \"../styles/style.css\";\nimport \"../styles/mobile.css\";\nimport logoImg from \"../images/logo.png\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport { ReactReduxContext } from \"react-redux\";\nimport { userLoggedOut } from \"../store/login\";\nimport { useHistory } from \"react-router-dom\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nexport default function Header() {\n  // snackbar states\n  const [openSnack, setOpenSnack] = React.useState(false);\n  const [openSnackLogout, setOpenSnackLogout] = React.useState(false);\n\n  const handleCloseSnackLogout = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnackLogout(false);\n  };\n\n  const handleCloseSnack = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnack(false);\n  };\n\n  // redux snipppet to store login info\n  const loginStore = useContext(ReactReduxContext);\n  const loggedUserData = useContext(ReactReduxContext);\n  const currentUser = loggedUserData.store.getState();\n\n  // console.log(currentUser.isLoggedIn);\n\n  const loginStatus = currentUser.isLoggedIn;\n\n  const history = useHistory();\n  const location = useLocation();\n\n  function logoutUser() {\n    history.push(\"/home\");\n    loggedUserData.store.dispatch(userLoggedOut({}));\n    setOpenSnackLogout(true);\n  }\n\n  // if used has not logged in\n  function myProfileClickHandler() {\n    setOpenSnack(true);\n  }\n  // Scroll to top if path changes\n  useLayoutEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <div>\n      <nav className=\"navigation max-width-1 m-auto\">\n        <div className=\"nav-left\">\n          <NavLink to=\"/home\">\n            <span>\n              <img src={logoImg} style={{ width: \"94px\" }} />\n            </span>\n          </NavLink>\n          <ul>\n            <NavLink\n              to=\"/home\"\n              style={{ textDecoration: \"none\" }}\n              activeClassName=\"selected\"\n            >\n              <li>\n                <a>Home</a>\n              </li>\n            </NavLink>\n            {loginStatus ? (\n              <NavLink\n                to=\"/myprofile\"\n                style={{ textDecoration: \"none\" }}\n                activeClassName=\"selected\"\n              >\n                <li>\n                  <a>My Profile</a>\n                </li>\n              </NavLink>\n            ) : (\n              <NavLink\n                onClick={myProfileClickHandler}\n                to=\"/login\"\n                style={{ textDecoration: \"none\" }}\n                // activeClassName=\"selected\"\n              >\n                <li>\n                  <a>My Profile</a>\n                </li>\n              </NavLink>\n            )}\n          </ul>\n        </div>\n        <div className=\"nav-left\">\n          <ul>\n            {loginStatus ? (\n              <NavLink\n                onClick={logoutUser}\n                to=\"/home\"\n                style={{ textDecoration: \"none\", color: \"red\" }}\n              >\n                Logout\n              </NavLink>\n            ) : (\n              <NavLink\n                onClick={() => {\n                  loginStore.store.dispatch(userLoggedOut());\n                }}\n                to=\"/login\"\n                style={{ textDecoration: \"none\" }}\n                activeClassName=\"selected\"\n              >\n                <li>\n                  <a>Login</a>\n                </li>\n              </NavLink>\n            )}\n          </ul>\n        </div>\n      </nav>\n      <div className=\"max-width-1 m-auto\">\n        <hr />\n      </div>\n      {/* please login snack  */}\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        open={openSnack}\n        autoHideDuration={3000}\n        onClose={handleCloseSnack}\n        message=\"Please Login!\"\n        action={\n          <React.Fragment>\n            <IconButton\n              size=\"small\"\n              aria-label=\"close\"\n              color=\"white\"\n              onClick={handleCloseSnack}\n            >\n              <CloseIcon fontSize=\"small\" style={{ color: \"white\" }} />\n            </IconButton>\n          </React.Fragment>\n        }\n      />\n      {/* userLoggedOut snackbar  */}\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        open={openSnackLogout}\n        autoHideDuration={3000}\n        onClose={handleCloseSnackLogout}\n        message=\"User Loggedout\"\n        action={\n          <React.Fragment>\n            <IconButton\n              size=\"small\"\n              aria-label=\"close\"\n              color=\"white\"\n              onClick={handleCloseSnack}\n            >\n              <CloseIcon fontSize=\"small\" style={{ color: \"white\" }} />\n            </IconButton>\n          </React.Fragment>\n        }\n      />\n    </div>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ReactReduxContext } from \"react-redux\";\nimport \"../styles/login.css\";\nimport { userLogged } from \"../store/login\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport \"../styles/loginDropdown.css\";\n\nexport default function LoginSign() {\n  // snackbar states\n  const [openSnackFields, setOpenSnackFields] = React.useState(false);\n  const [openSnackLogin, setOpenSnackLogin] = React.useState(false);\n  const [openSnackRegister, setOpenSnackRegister] = React.useState(false);\n\n  // redux\n  const loginStore = useContext(ReactReduxContext);\n\n  const history = useHistory();\n\n  // snack bar\n  const handleCloseSnackFields = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnackFields(false);\n  };\n\n  const handleCloseSnackLogin = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnackLogin(false);\n  };\n\n  const handleCloseSnackRegister = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnackRegister(false);\n  };\n\n  function forgetpass() {\n    window.alert(\"Not my problem\");\n  }\n  // For user LOGIN\n  const [loginUser, setLoginUser] = useState({\n    loginEmail: \"\",\n    loginPassword: \"\",\n  });\n\n  let lname, lvalue;\n  const handleLoginInputs = (event) => {\n    // console.log(event);\n\n    lname = event.target.name;\n    lvalue = event.target.value;\n\n    setLoginUser({ ...loginUser, [lname]: lvalue });\n  };\n\n  const loginData = async (event) => {\n    event.preventDefault();\n\n    const { loginEmail, loginPassword } = loginUser;\n\n    const res = await fetch(\"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email: loginEmail,\n        password: loginPassword,\n      }),\n    });\n\n    const loginResData = await res.json();\n\n    if (res.status === 400 || !loginResData) {\n      window.alert(loginResData.error);\n      // console.log(loginResData.error);\n    } else {\n      // console.log(loginResData);\n      loginStore.store.dispatch(\n        userLogged({\n          id: loginResData.userLogin._id,\n          userName: loginResData.userLogin.userName,\n          email: loginResData.userLogin.email,\n          profilePicture: loginResData.userLogin.profilePicture,\n        })\n      );\n      setOpenSnackLogin(true);\n      // window.alert('Login successfull!');\n      history.push(\"/home\");\n    }\n  };\n\n  // for user RESISTRATION\n  const [user, setUser] = useState({\n    userName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    profilePicture: \"\",\n  });\n\n  let name, value;\n  const handleInputs = (e) => {\n    // console.log(e);\n    name = e.target.name;\n    value = e.target.value;\n\n    setUser({ ...user, [name]: value });\n  };\n\n  const PostData = async (e) => {\n    e.preventDefault();\n\n    const { userName, email, password, confirmPassword, profilePicture } = user;\n    const res = await fetch(\"/register\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        userName,\n        email,\n        password,\n        confirmPassword,\n        profilePicture,\n      }),\n    });\n    const data = await res.json();\n\n    if (res.status === 422 || !data) {\n      window.alert(data.error);\n      // console.log(data.error);\n    } else {\n      // console.log(data);\n      loginStore.store.dispatch(\n        userLogged({\n          id: data.userRegister._id,\n          userName: data.userRegister.userName,\n          email: data.userRegister.email,\n          profilePicture: data.userRegister.profilePicture,\n        })\n      );\n      // console.log(\"registration successfull\");\n      // window.alert(\"Registration successful!\");\n      setOpenSnackRegister(true);\n      history.push(\"/home\");\n    }\n  };\n\n  return (\n    <div>\n      {/* // fill all the fields snackbar */}\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        backgroundColor=\"#FFF8F2\"\n        open={openSnackFields}\n        autoHideDuration={2000}\n        onClose={handleCloseSnackFields}\n        message=\"Fields can't be empty\"\n        action={\n          <React.Fragment>\n            <IconButton\n              size=\"small\"\n              aria-label=\"close\"\n              color=\"white\"\n              onClick={handleCloseSnackFields}\n            >\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          </React.Fragment>\n        }\n      />\n      {/* for login  */}\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        backgroundColor=\"#FFF8F2\"\n        open={openSnackLogin}\n        autoHideDuration={2000}\n        onClose={handleCloseSnackLogin}\n        message=\"User Loggedin\"\n        action={\n          <React.Fragment>\n            <IconButton\n              size=\"small\"\n              aria-label=\"close\"\n              color=\"white\"\n              onClick={handleCloseSnackLogin}\n            >\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          </React.Fragment>\n        }\n      />\n      {/* for register  */}\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        // color=\"#FFF8F2\"\n        backgroundColor=\"#FFF8F2\"\n        open={openSnackRegister}\n        autoHideDuration={2000}\n        onClose={handleCloseSnackRegister}\n        message=\"Fields can't be empty\"\n        action={\n          <React.Fragment>\n            <IconButton\n              size=\"small\"\n              aria-label=\"close\"\n              color=\"white\"\n              onClick={handleCloseSnackRegister}\n            >\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          </React.Fragment>\n        }\n      />\n      <div id=\"container\">\n        <div id=\"cover\">\n          <h1 className=\"sign-up\">Hello, Friend!</h1>\n          <p className=\"sign-up\">\n            Enter your personal details, create a personal account\n            <br /> and start a journey with us\n          </p>\n          <a className=\"button sign-up\" href=\"#cover\">\n            Sign Up\n          </a>\n\n          <h1 className=\"sign-in\">Welcome Back!</h1>\n          <p className=\"sign-in\">\n            To keep connected with us please\n            <br /> login with your personal info\n          </p>\n          <br />\n          <a className=\"button sub sign-in\" href=\"#\">\n            Login\n          </a>\n        </div>\n\n        <div id=\"login\">\n          <h1>Login</h1>\n\n          <form method=\"POST\">\n            <input\n              type=\"email\"\n              placeholder=\"Email\"\n              autoComplete=\"off\"\n              required\n              name=\"loginEmail\"\n              value={loginUser.loginEmail}\n              onChange={handleLoginInputs}\n            />\n            <br />\n\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              autoComplete=\"off\"\n              required\n              name=\"loginPassword\"\n              value={loginUser.loginPassword}\n              onChange={handleLoginInputs}\n            />\n            <br />\n\n            <a id=\"forgot-pass\" onClick={forgetpass}>\n              Forgot your password?\n            </a>\n            <br />\n            <input\n              className=\"submit-btn\"\n              type=\"submit\"\n              value=\"Sign In\"\n              onClick={loginData}\n            />\n          </form>\n        </div>\n\n        <div id=\"register\">\n          <h1>Create Account</h1>\n          <form method=\"POST\">\n            <input\n              type=\"text\"\n              placeholder=\"Full name\"\n              autoComplete=\"off\"\n              required\n              name=\"userName\"\n              value={user.userName}\n              onChange={handleInputs}\n            />\n            <br />\n            <input\n              type=\"email\"\n              placeholder=\"Email\"\n              autoComplete=\"off\"\n              required\n              name=\"email\"\n              value={user.email}\n              onChange={handleInputs}\n            />\n            <br />\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              autoComplete=\"off\"\n              required\n              name=\"password\"\n              value={user.password}\n              onChange={handleInputs}\n            />\n            <br />\n            <input\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              autoComplete=\"off\"\n              required\n              name=\"confirmPassword\"\n              value={user.confirmPassword}\n              onChange={handleInputs}\n            />\n            <br />\n            <div className=\"ip_container_login\">\n              <div className=\"ip_select-box_login\">\n                <select\n                  name=\"profilePicture\"\n                  onChange={handleInputs}\n                  value={user.profilePicture}\n                  defaultValue=\"default\"\n                  placeholder=\"Select your Avatar\"\n                >\n                  <option value=\"fitness\">Choose an Avatar</option>\n                  <option value=\"maleAvatar1\">Male Avatar 1</option>\n                  <option value=\"maleAvatar2\">Male Avatar 2</option>\n                  <option value=\"femaleAvatar1\">Female Avatar 1</option>\n                  <option value=\"femaleAvatar2\">Female Avatar 2</option>\n                  <option value=\"boyAvatar\">Boy Avatar</option>\n                  <option value=\"girlAvatar\">Girl Avatar</option>\n                </select>\n              </div>\n            </div>\n            <br />\n            <input\n              className=\"submit-btn spcial\"\n              type=\"submit\"\n              value=\"Sign Up\"\n              onClick={PostData}\n            />\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/empty.dbb56d29.webp\";","import React, { useContext } from \"react\";\nimport \"../styles/utils.css\";\nimport \"../styles/style.css\";\nimport \"../styles/mobile.css\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { ReactReduxContext } from \"react-redux\";\nimport { useState, useEffect, useReducer } from \"react\";\nimport images from \"../utils/postImages\";\nimport avatarImages from \"../utils/avatarImages\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport empty from \"../images/empty.webp\";\n\nexport default function MyArticles() {\n  // let  [,setState]=useState();\n  const [openSnackDeleteArticle, setOpenSnackDeleteArticle] =\n    React.useState(false);\n\n  // redux\n  const loggedUserData = useContext(ReactReduxContext);\n  const currentUser = loggedUserData.store.getState();\n  // console.log(currentUser.profile.id);\n\n  // const history = useHistory();\n\n  const [articleList, setArticleList] = useState([]);\n  const [deletedArticleId, setDeletedArticleId] = useState(\"\");\n\n  // this is to force update the component\n  // const [, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  const handleCloseSnackDeleteArticle = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnackDeleteArticle(false);\n  };\n\n  useEffect(() => {\n    fetchArticles();\n  }, []);\n\n  const fetchArticles = async () => {\n    const res = await fetch(\"/allarticles\", {\n      method: \"GET\",\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // console.log(data);\n        // console.log(articleList);\n        setArticleList(data.allArticles);\n      });\n    // console.log(articleList);\n  };\n\n  const deleteArticle = async (id) => {\n    const res = await fetch(\"/deleteArticle\", {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        _id: id,\n      }),\n    });\n\n    if (res.status === 204) {\n      setDeletedArticleId(id);\n      console.log(deletedArticleId);\n      // forceUpdate();\n      fetchArticles();\n      setOpenSnackDeleteArticle(true);\n    } else {\n      console.log(\"error!\");\n    }\n  };\n  const onlyMyArticleList = [];\n  for (let index = 0; index < articleList.length; index++) {\n    if (\n      currentUser.profile.id === articleList[index].uploadedBy._id &&\n      deletedArticleId !== articleList[index]._id\n    )\n      onlyMyArticleList.push(articleList[index]);\n  }\n  console.log(\"this\");\n  console.log(onlyMyArticleList.length);\n  console.log(onlyMyArticleList);\n  console.log(\"this\");\n  return onlyMyArticleList.length === 0 ? (\n    <>\n      <div\n        className=\"home-articles max-width-1 m-auto font2\"\n        style={{ alignContent: \"center\", backgroundColor: \"white\" }}\n      >\n        <h2>My Articles</h2>\n      </div>\n      <div className=\"max-width-1 m-auto font2 nothingToShow\">\n        <img src={empty}></img>\n      </div>\n    </>\n  ) : (\n    <>\n      <div className=\"home-articles max-width-1 m-auto font2\">\n        <h2>My Articles</h2>\n        {onlyMyArticleList.map((article) => {\n          if (\n            currentUser.profile.id === article.uploadedBy._id &&\n            deletedArticleId !== article._id\n          )\n            return (\n              <div className=\"home-article\">\n                <Link\n                  to={{\n                    pathname: \"/blogpost\",\n                    state: {\n                      articleImage: article.articleImage,\n                      articleTitle: article.articleTitle,\n                      articleBody: article.articleBody,\n                      readTime: article.readTime,\n                      userName: article.uploadedBy.userName,\n                      profilePicture: article.uploadedBy.profilePicture,\n                      allArticles: articleList,\n                    },\n                  }}\n                  style={{ textDecoration: \"none\", color: \"black\" }}\n                >\n                  <div className=\"home-article-img\">\n                    {/* <img src={postImage} alt=\"article\" /> */}\n                    <img\n                      src={images[`${article.articleImage}`]}\n                      alt=\"article\"\n                    />\n                  </div>\n                </Link>\n                <div className=\"home-article-content font1\">\n                  <Link\n                    to={{\n                      pathname: \"/blogpost\",\n                      state: {\n                        articleImage: article.articleImage,\n                        articleTitle: article.articleTitle,\n                        articleBody: article.articleBody,\n                        readTime: article.readTime,\n                        userName: article.uploadedBy.userName,\n                        profilePicture: article.uploadedBy.profilePicture,\n                        allArticles: articleList,\n                      },\n                    }}\n                    style={{ textDecoration: \"none\", color: \"black\" }}\n                  >\n                    <a>\n                      <h4>{article.articleTitle}</h4>\n                    </a>\n                  </Link>\n                  <div className=\"post-info\">\n                    <div className=\"profilepicture\">\n                      <img\n                        src={\n                          avatarImages[`${article.uploadedBy.profilePicture}`]\n                        }\n                        alt=\"Avatar\"\n                        style={{ borderRadius: \"50%\", width: \"50px\" }}\n                      />\n                    </div>\n                    <div>{article.uploadedBy.userName}</div>\n                  </div>\n                  <div className=\"buttondate\">\n                    <span>\n                      {article.uploadedTime.substring(0, 10)} |{\" \"}\n                      {article.readTime} min read\n                    </span>\n                    {/* <button >  */}\n                    <a\n                      class=\"myButton\"\n                      name=\"delete\"\n                      onClick={() => deleteArticle(article._id)}\n                      value={article._id}\n                    >\n                      Delete\n                    </a>\n                    {/* </button> */}\n                  </div>\n                </div>\n              </div>\n            );\n        })}\n      </div>\n      {/* // deleted article snackbar */}\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        backgroundColor=\"#FFF8F2\"\n        open={openSnackDeleteArticle}\n        autoHideDuration={2000}\n        onClose={handleCloseSnackDeleteArticle}\n        message=\"Article Deleted\"\n        action={\n          <React.Fragment>\n            <IconButton\n              size=\"small\"\n              aria-label=\"close\"\n              color=\"white\"\n              onClick={handleCloseSnackDeleteArticle}\n            >\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          </React.Fragment>\n        }\n      />\n    </>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/defaultAvatar.dd61314f.png\";","import React, { useContext } from \"react\";\nimport \"../styles/profileCard.css\";\nimport MyArticles from \"./MyArticles\";\nimport PostArticle from \"./PostArticle\";\nimport { ReactReduxContext } from \"react-redux\";\nimport images from \"../utils/avatarImages\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport defaultProfilePicture from \"../images/avatar/defaultAvatar.png\"\n\n\nexport default function MyProfileCard() {\n  const [openSnackArticlePosted, setOpenSnackArticlePosted] =\n    React.useState(false);\n\n  const loggedUserData = useContext(ReactReduxContext);\n  const currentUser = loggedUserData.store.getState();\n  // console.log(currentUser);\n\n  const handleCloseSnackArticlePosted = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnackArticlePosted(false);\n  };\n\n  return (\n    <div>\n      <div id=\"container\">\n        <div className=\"product-details\">\n          <h1>{currentUser.profile.userName}</h1>\n          <h4>{currentUser.profile.email}</h4>\n          <h4>total posts: 4</h4>\n          <div className=\"control\">\n            <PostArticle\n              changeSnackStateArticlePosted={(snackStateArticlePosted) =>\n                setOpenSnackArticlePosted(snackStateArticlePosted)\n              }\n            />\n            {/* <button> */}\n          </div>\n        </div>\n        <div className=\"product-image\">\n          <img\n            src={images[`${currentUser.profile.profilePicture}`]}\n            alt={defaultProfilePicture}\n          />\n        </div>\n      </div>\n      <div className=\"max-width-1 m-auto\">\n        <hr />\n      </div>\n      {/* // posted article snackbar */}\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        // color=\"#FFF8F2\"\n        backgroundColor=\"#FFF8F2\"\n        open={openSnackArticlePosted}\n        autoHideDuration={2000}\n        onClose={handleCloseSnackArticlePosted}\n        message=\"Article Posted\"\n        action={\n          <React.Fragment>\n            <IconButton\n              size=\"small\"\n              aria-label=\"close\"\n              color=\"white\"\n              onClick={handleCloseSnackArticlePosted}\n            >\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          </React.Fragment>\n        }\n      />\n      <MyArticles />\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"../styles/utils.css\";\nimport \"../styles/style.css\";\nimport \"../styles/mobile.css\";\nimport { Link } from \"react-router-dom\";\nimport images from \"../utils/postImages\";\nimport avatarImages from \"../utils/avatarImages\";\n\nexport default function PeopleAlsoRead({ allArticles }) {\n  const randomArticles = [];\n  const randomNumbers = () => {\n    for (let index = 0; index < 3; index++) {\n      const rand = allArticles[Math.floor(Math.random() * allArticles.length)];\n      randomArticles.push(rand);\n    }\n  };\n  randomNumbers();\n  // console.log(randomArticles);\n\n  return (\n    <>\n      <div className=\"home-articles max-width-1 m-auto font2\">\n        <h2>People Also Read</h2>\n        {randomArticles.map((article) => {\n          return (\n            <Link\n              to={{\n                pathname: \"/blogpost\",\n                state: {\n                  articleImage: article.articleImage,\n                  articleTitle: article.articleTitle,\n                  articleBody: article.articleBody,\n                  readTime: article.readTime,\n                  userName: article.uploadedBy.userName,\n                  profilePicture: article.uploadedBy.profilePicture,\n                  allArticles: allArticles,\n                },\n              }}\n              style={{ textDecoration: \"none\", color: \"black\" }}\n            >\n              <div className=\"home-article\">\n                <div className=\"home-article-img\">\n                  {/* <img src={postImage} alt=\"article\" /> */}\n                  <img src={images[`${article.articleImage}`]} alt=\"article\" />\n                </div>\n                <div className=\"home-article-content font1\">\n                  <a>\n                    <h3>{article.articleTitle}</h3>\n                  </a>\n                  <div className=\"post-info\">\n                    <div className=\"profilepicture\">\n                      <img\n                        src={\n                          avatarImages[`${article.uploadedBy.profilePicture}`]\n                        }\n                        alt=\"Avatar\"\n                        style={{ borderRadius: \"50%\", width: \"50px\" }}\n                      />\n                    </div>\n                    <div>{article.uploadedBy.userName}</div>\n                  </div>\n\n                  <span>07 January | {article.readTime} min read</span>\n                </div>\n              </div>\n            </Link>\n          );\n        })}\n      </div>\n    </>\n  );\n}\n","const imagesBanner = {\n  diy: require(\"../images/bannerImages/diy.png\").default,\n  education: require(\"../images/bannerImages/education.png\").default,\n  fashion: require(\"../images/bannerImages/fashion.png\").default,\n  finance: require(\"../images/bannerImages/finance.png\").default,\n  fitness: require(\"../images/bannerImages/fitness.png\").default,\n  food: require(\"../images/bannerImages/food.png\").default,\n  pet: require(\"../images/bannerImages/pet.png\").default,\n  politics: require(\"../images/bannerImages/politics.png\").default,\n  tech: require(\"../images/bannerImages/tech.png\").default,\n  travel: require(\"../images/bannerImages/travel.png\").default,\n  defaultImage: require(\"../images/bannerImages/defaultImage.png\").default,\n};\n\nexport default imagesBanner;","import React, { useLayoutEffect } from \"react\";\nimport { useLocation } from \"react-router\";\nimport \"../styles/blogPost.css\";\nimport PeopleAlsoRead from \"./PeopleAlsoRead\";\nimport images from \"../utils/bannerImages\";\nimport avatarImages from \"../utils/avatarImages\";\n\nexport default function BlogPost() {\n  // getting values using location\n  const location = useLocation();\n  const {\n    articleImage,\n    articleTitle,\n    articleBody,\n    readTime,\n    userName,\n    profilePicture,\n    allArticles,\n  } = location.state;\n  // console.log(profilePicture);\n\n  // Scroll to top if path changes\n  useLayoutEffect(() => {\n    window.scrollTo(0, 0);\n    // console.log(location.pathname);\n  });\n\n  return (\n    <div>\n      <div className=\"post-img\">\n        <img src={images[`${articleImage}`]} alt=\"\" />\n      </div>\n      <div className=\"max-width-1 m-auto\">\n        <hr />\n      </div>\n      <div className=\"m-auto blog-post-content max-width-2 m-auto my-2\">\n        <h1 className=\"font1\">{articleTitle}</h1>\n        <div className=\"blogpost-meta\">\n          <div className=\"author-info\" style={{ display: \"flex\" }}>\n            <div>\n              <img\n                src={avatarImages[`${profilePicture}`]}\n                alt=\"Avatar\"\n                style={{ borderRadius: \"50%\", width: \"50px\" }}\n              />\n            </div>\n            <div>\n              <div>\n                <b>{userName}</b>\n              </div>\n              <div>04 January. {readTime} min read</div>\n            </div>\n          </div>\n        </div>\n        <p className=\"font1\">{articleBody}</p>\n      </div>\n      <div className=\"max-width-1 m-auto\">\n        <hr />\n      </div>\n      <PeopleAlsoRead allArticles={allArticles} />\n    </div>\n  );\n}\n","import { Route, Redirect } from \"react-router\";\nimport \"./App.css\";\nimport Banner from \"./components/Banner\";\nimport Header from \"./components/Header\";\nimport LoginSign from \"./components/LoginSign\";\nimport MyProfileCard from \"./components/MyProfileCard\";\nimport BlogPost from \"./components/BlogPost\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Route exact path=\"/\">\n        <Redirect to=\"/home\" />\n      </Route>\n      <Route exact path=\"/home\">\n        <Banner />\n      </Route>\n      <Route exact path=\"/myprofile\">\n        <MyProfileCard />\n      </Route>\n      <Route exact path=\"/login\">\n        <LoginSign />\n      </Route>\n      <Route exact path=\"/blogpost\">\n        <BlogPost />\n      </Route>\n    </>\n  );\n}\n\nexport default App;\n","import {configureStore,getDefaultMiddleware} from '@reduxjs/toolkit';\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'\n\nimport {reducer} from './login';\n\n\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage,\n}\n\n\nconst persistedReducer = persistReducer(persistConfig, reducer)\n\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n})\nexport const  persistor = persistStore(store);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { persistor, store } from \"./store/configureStore\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <PersistGate loading={null} persistor={persistor}>\n      <Provider store={store}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </Provider>\n    </PersistGate>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}